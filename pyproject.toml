[project]
name = "jax-tunix-grokking"
version = "0.1.0"
description = "JAX/Flax NNX implementation of the grokking phenomenon with Tunix"
authors = [
    {name = "Amund Tveit", email = "amund@atsentia.ai"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["grokking", "jax", "flax", "tunix", "transformer", "modular-arithmetic"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "jax>=0.6.0,<=0.7.1",
    "jaxlib>=0.6.0,<=0.7.1",
    "flax>=0.11.0",
    "optax>=0.2.0",
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

tpu = [
    # For TPU support - see JAX installation docs
    # Install with: uv pip install 'jax[tpu]==0.7.1' -f https://storage.googleapis.com/jax-releases/libtpu_releases.html
]

cuda = [
    # For CUDA support - see JAX installation docs
    # Install with: uv pip install 'jax[cuda12]==0.7.1'
]

[project.urls]
Homepage = "https://github.com/yourusername/jax-tunix-grokking"
Repository = "https://github.com/yourusername/jax-tunix-grokking"
"Bug Tracker" = "https://github.com/yourusername/jax-tunix-grokking/issues"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["*.py"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --cov=. --cov-report=term-missing"
